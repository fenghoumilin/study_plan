<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hpu.study_plan.dao.ArticleDao">

    <insert id="insertArticle" useGeneratedKeys="true" keyProperty="id" parameterType="map">
        INSERT INTO `article` (uid, gid, title, content, pic_url, created_time, update_time)
        VALUE (#{uid}, #{gid}, #{title}, #{content}, #{pic_url}, NOW(), NOW())
    </insert>
    <select id="getArticleResponse" parameterType="int" resultType="com.hpu.study_plan.model.ArticleResponse">
        SELECT a.id id, uid, u.nick authorName, u.avatar_pic_url authorAvatar, gid, title, content, pic_url picUrl, a.created_time createdTime FROM article a
        INNER JOIN `user` u
        ON a.uid=u.id
        WHERE a.id=#{id}
    </select>
    <select id="getArticlesByGid" parameterType="map" resultType="com.hpu.study_plan.model.ArticleResponse">
        SELECT a.id, a.uid, gid, title, a.content, pic_url picUrl, a.created_time createdTime, COUNT(ac.id) commentCount
        FROM article a LEFT JOIN article_comment ac
        ON a.id=ac.aid
        WHERE gid=#{gid}
        GROUP BY a.id
        LIMIT #{start}, #{end}
    </select>
    <select id="getArticleCountByGid" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM article WHERE gid=#{gid}
    </select>
    <insert id="insertArticleLike" parameterType="map">
        INSERT INTO article_like(aid, uid, created_time)
        VALUE(#{aid}, #{uid}, now())
    </insert>
    <insert id="insertArticleComment" parameterType="map">
        INSERT INTO article_comment(aid, uid, link_uid, content, created_time)
        VALUE(#{aid}, #{uid}, #{linkUid}, #{content}, now())
    </insert>
    <select id="getLikeCount" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM article_like WHERE aid=#{aid}
    </select>
    <select id="getArticleAction" parameterType="int" resultType="com.hpu.study_plan.model.ArticleAction">
        SELECT SUM(un.commentCount) commentCount, SUM(un.likeCount) likeCount FROM (
            SELECT 0 commentCount, COUNT(al.id) likeCount FROM article_like al WHERE al.aid=#{aid}
            UNION
            SELECT COUNT(ac.id) commentCount, 0 likeCount FROM article_comment ac WHERE ac.aid=#{aid}
        ) un
    </select>
    <select id="getCommentInfoList" parameterType="int" resultType="com.hpu.study_plan.model.CommentInfo">
        SELECT aid, uid, link_uid linkUid, content, nick authorName, avatar_pic_url authorAvatar FROM article_comment ac
        INNER JOIN `user` u
        ON ac.uid=u.id
        WHERE ac.aid=#{aid} ORDER BY ac.id DESC
    </select>
    <select id="getArticlesByUid" parameterType="map" resultType="com.hpu.study_plan.model.ArticleResponse">
        SELECT id, uid, gid, title, content, pic_url picUrl, created_time createdTime FROM article WHERE uid=#{uid} LIMIT 0, #{limit}
    </select>
    <select id="getArticleResponseListByIdList" parameterType="collection" resultType="com.hpu.study_plan.model.ArticleResponse">
        SELECT a.id id, uid, u.nick authorName, u.avatar_pic_url authorAvatar, gid, title, content, pic_url picUrl, a.created_time createdTime FROM article a
        INNER JOIN `user` u
        ON a.uid=u.id
        WHERE a.id IN (
        <foreach collection="collection" index="index" item="aid"  separator=",">
            #{aid}
        </foreach>
        )
    </select>

</mapper>